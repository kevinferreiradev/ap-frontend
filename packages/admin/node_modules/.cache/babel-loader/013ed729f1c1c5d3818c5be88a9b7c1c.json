{"ast":null,"code":"import axios from 'axios';\nimport { API_URL, ACCESS_TOKEN } from './constants';\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\naxiosInstance.interceptors.request.use(async config => {\n  if (config.url && !config.url.includes('signin') && !config.url.includes('refresh') && !config.url.includes('signup')) {\n    config.headers.Authorization = `Bearer ${localStorage.getItem(ACCESS_TOKEN)}`;\n  }\n\n  return config;\n}, async error => {\n  if (error.status !== 401 && error.status !== 403) {\n    return Promise.reject(error);\n  }\n\n  error.response.config.headers.Authorization = `Bearer ${localStorage.getItem(ACCESS_TOKEN)}`;\n  return axios(error.response.config);\n});\nexport { axiosInstance };","map":{"version":3,"sources":["/Users/thiagoramalho/Documents/Thiago/Workspace/Firestorm/ap-admin/packages/admin/src/services/http.ts"],"names":["axios","API_URL","ACCESS_TOKEN","axiosInstance","create","baseURL","headers","interceptors","request","use","config","url","includes","Authorization","localStorage","getItem","error","status","Promise","reject","response"],"mappings":"AAAA,OAAOA,KAAP,MAA0C,OAA1C;AAEA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,aAAtC;AAEA,MAAMC,aAAa,GAAGH,KAAK,CAACI,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAEJ,OADwB;AAEjCK,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFwB,CAAb,CAAtB;AAOAH,aAAa,CAACI,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CACE,MAAOC,MAAP,IAA+C;AAC7C,MACEA,MAAM,CAACC,GAAP,IACA,CAACD,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoB,QAApB,CADD,IAEA,CAACF,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoB,SAApB,CAFD,IAGA,CAACF,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoB,QAApB,CAJH,EAKE;AACAF,IAAAA,MAAM,CAACJ,OAAP,CAAeO,aAAf,GAAgC,UAASC,YAAY,CAACC,OAAb,CACvCb,YADuC,CAEvC,EAFF;AAGD;;AACD,SAAOQ,MAAP;AACD,CAbH,EAcE,MAAOM,KAAP,IAA8C;AAC5C,MAAIA,KAAK,CAACC,MAAN,KAAiB,GAAjB,IAAwBD,KAAK,CAACC,MAAN,KAAiB,GAA7C,EAAkD;AAChD,WAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD;;AAEDA,EAAAA,KAAK,CAACI,QAAN,CAAeV,MAAf,CAAsBJ,OAAtB,CAA8BO,aAA9B,GAA+C,UAASC,YAAY,CAACC,OAAb,CACtDb,YADsD,CAEtD,EAFF;AAIA,SAAOF,KAAK,CAACgB,KAAK,CAACI,QAAN,CAAeV,MAAhB,CAAZ;AACD,CAxBH;AA2BA,SAASP,aAAT","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\n\nimport { API_URL, ACCESS_TOKEN } from './constants';\n\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\naxiosInstance.interceptors.request.use(\n  async (config): Promise<AxiosRequestConfig> => {\n    if (\n      config.url &&\n      !config.url.includes('signin') &&\n      !config.url.includes('refresh') &&\n      !config.url.includes('signup')\n    ) {\n      config.headers.Authorization = `Bearer ${localStorage.getItem(\n        ACCESS_TOKEN,\n      )}`;\n    }\n    return config;\n  },\n  async (error): Promise<AxiosRequestConfig> => {\n    if (error.status !== 401 && error.status !== 403) {\n      return Promise.reject(error);\n    }\n\n    error.response.config.headers.Authorization = `Bearer ${localStorage.getItem(\n      ACCESS_TOKEN,\n    )}`;\n\n    return axios(error.response.config);\n  },\n);\n\nexport { axiosInstance };\n"]},"metadata":{},"sourceType":"module"}