{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { login } from 'providers/authProvider';\nconst defaultUserData = {\n  username: '',\n  password: ''\n};\nexport const useLogin = () => {\n  _s();\n\n  const [userData, setUserData] = useState(defaultUserData);\n  const [loginError, setLoginError] = useState(false);\n  const [loginStarted, setLoginStarted] = useState(false);\n\n  const onChangeField = field => event => {\n    setUserData({ ...userData,\n      [field]: event.target.value\n    });\n  };\n\n  const doLogin = (loginData, history) => {\n    setLoginError(false);\n    setLoginStarted(true);\n    login(loginData).then(_response => {\n      history.push('user');\n      setLoginStarted(false);\n    }).catch(_error => {\n      setLoginError(true);\n      setLoginStarted(false);\n    });\n  };\n\n  return {\n    userData,\n    onChangeField,\n    doLogin,\n    loginError,\n    loginStarted\n  };\n};\n\n_s(useLogin, \"upyZu0kW54MpLeMW8uoQBtwtPf0=\");","map":{"version":3,"sources":["/Users/thiagoramalho/Documents/Thiago/Workspace/Firestorm/ap-admin/packages/admin/src/modules/login/useLogin.ts"],"names":["useState","login","defaultUserData","username","password","useLogin","userData","setUserData","loginError","setLoginError","loginStarted","setLoginStarted","onChangeField","field","event","target","value","doLogin","loginData","history","then","_response","push","catch","_error"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAgD,wBAAhD;AAGA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,QAAQ,EAAE,EADY;AAEtBC,EAAAA,QAAQ,EAAE;AAFY,CAAxB;AAoBA,OAAO,MAAMC,QAA2B,GAAG,MAAM;AAAA;;AAC/C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CACtCE,eADsC,CAAxC;AAGA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMY,aAAa,GAAIC,KAAD,IACpBC,KADuC,IAEpC;AACHP,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACO,KAAD,GAASC,KAAK,CAACC,MAAN,CAAaC;AAArC,KAAD,CAAX;AACD,GAJD;;AAMA,QAAMC,OAAO,GAAG,CAACC,SAAD,EAAsCC,OAAtC,KAA2D;AACzEV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAV,IAAAA,KAAK,CAACiB,SAAD,CAAL,CACGE,IADH,CACQC,SAAS,IAAI;AACjBF,MAAAA,OAAO,CAACG,IAAR,CAAa,MAAb;AACAX,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAJH,EAKGY,KALH,CAKSC,MAAM,IAAI;AACff,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KARH;AASD,GAZD;;AAcA,SAAO;AACLL,IAAAA,QADK;AAELM,IAAAA,aAFK;AAGLK,IAAAA,OAHK;AAILT,IAAAA,UAJK;AAKLE,IAAAA;AALK,GAAP;AAOD,CAlCM;;GAAML,Q","sourcesContent":["import { useState } from 'react';\nimport { login, AuthCredentialsInterface } from 'providers/authProvider';\nimport { History } from 'history';\n\nconst defaultUserData = {\n  username: '',\n  password: '',\n};\n\ninterface useLoginInterface {\n  (): {\n    userData: AuthCredentialsInterface;\n\n    onChangeField: (\n      field: string,\n    ) => (event: React.ChangeEvent<HTMLInputElement>) => void;\n\n    doLogin: (loginData: AuthCredentialsInterface, history: History) => void;\n\n    loginError: boolean;\n    loginStarted: boolean;\n  };\n}\n\nexport const useLogin: useLoginInterface = () => {\n  const [userData, setUserData] = useState<AuthCredentialsInterface>(\n    defaultUserData,\n  );\n  const [loginError, setLoginError] = useState(false);\n  const [loginStarted, setLoginStarted] = useState(false);\n\n  const onChangeField = (field: string) => (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setUserData({ ...userData, [field]: event.target.value });\n  };\n\n  const doLogin = (loginData: AuthCredentialsInterface, history: History) => {\n    setLoginError(false);\n    setLoginStarted(true);\n    login(loginData)\n      .then(_response => {\n        history.push('user');\n        setLoginStarted(false);\n      })\n      .catch(_error => {\n        setLoginError(true);\n        setLoginStarted(false);\n      });\n  };\n\n  return {\n    userData,\n    onChangeField,\n    doLogin,\n    loginError,\n    loginStarted,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}